<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>git命令使用小结</title>
      <link href="/20180907/github%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8%E5%B0%8F%E7%BB%93/"/>
      <url>/20180907/github%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8%E5%B0%8F%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>以下是平时我使用到的git命令，在此做一个总结，方便查看</p><h2 id="远程仓库相关命令"><a href="#远程仓库相关命令" class="headerlink" title="远程仓库相关命令"></a>远程仓库相关命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">检出仓库：$ git clone git://github.com/jquery/jquery.git</span><br><span class="line"></span><br><span class="line">查看远程仓库：$ git remote -v</span><br><span class="line"></span><br><span class="line">添加远程仓库：$ git remote add [name] [url]</span><br><span class="line"></span><br><span class="line">删除远程仓库：$ git remote rm [name]</span><br><span class="line"></span><br><span class="line">修改远程仓库：$ git remote set-url –push [name] [newUrl]</span><br><span class="line"></span><br><span class="line">拉取远程仓库：$ git pull [remoteName] [localBranchName]</span><br><span class="line"></span><br><span class="line">推送远程仓库：$ git push [remoteName] [localBranchName]</span><br><span class="line"></span><br><span class="line">*如果想把本地的某个分支test提交到远程仓库，并作为远程仓库的master分支，或者作为另外一个名叫test的分支，如下：</span><br><span class="line"></span><br><span class="line">$git push origin test:master         // 提交本地test分支作为远程的master分支</span><br><span class="line"></span><br><span class="line">$git push origin test:test              // 提交本地test分支作为远程的test分支</span><br></pre></td></tr></table></figure><h2 id="分支-branch-操作相关命令"><a href="#分支-branch-操作相关命令" class="headerlink" title="分支(branch)操作相关命令"></a>分支(branch)操作相关命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">查看本地分支：$ git branch</span><br><span class="line"></span><br><span class="line">查看远程分支：$ git branch -r</span><br><span class="line"></span><br><span class="line">创建本地分支：$ git branch [name] —-注意新分支创建后不会自动切换为当前分支</span><br><span class="line"></span><br><span class="line">切换分支：$ git checkout [name]</span><br><span class="line"></span><br><span class="line">创建新分支并立即切换到新分支：$ git checkout -b [name]</span><br><span class="line"></span><br><span class="line">删除分支：$ git branch -d [name] —- -d选项只能删除已经参与了合并的分支，对于未有合并的分支是无法删除的。如果想强制删除一个分支，可以使用-D选项</span><br><span class="line"></span><br><span class="line">合并分支：$ git merge [name] —-将名称为[name]的分支与当前分支合并</span><br><span class="line"></span><br><span class="line">创建远程分支(本地分支push到远程)：$ git push origin [name]</span><br><span class="line"></span><br><span class="line">删除远程分支：git push origin :heads/[name]&amp;nbsp;或&amp;nbsp; gitpush origin :[name] </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">*创建空的分支：(执行命令之前记得先提交你当前分支的修改，否则会被强制删干净没得后悔)</span><br><span class="line"></span><br><span class="line">$git symbolic-ref HEAD refs/heads/[name]</span><br><span class="line"></span><br><span class="line">$rm .git/index</span><br><span class="line"></span><br><span class="line">$git clean -fdx</span><br></pre></td></tr></table></figure><h2 id="版本-tag-操作相关命令"><a href="#版本-tag-操作相关命令" class="headerlink" title="版本(tag)操作相关命令"></a>版本(tag)操作相关命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">查看版本：$ git tag</span><br><span class="line"></span><br><span class="line">创建版本：$ git tag [name]</span><br><span class="line"></span><br><span class="line">删除版本：$ git tag -d [name]</span><br><span class="line"></span><br><span class="line">查看远程版本：$ git tag -r</span><br><span class="line"></span><br><span class="line">创建远程版本(本地版本push到远程)：$ git push origin [name]</span><br><span class="line"></span><br><span class="line">删除远程版本：$ git push origin :refs/tags/[name]</span><br><span class="line"></span><br><span class="line">合并远程仓库的tag到本地：$ git pull origin –tags</span><br><span class="line"></span><br><span class="line">上传本地tag到远程仓库：$ git push origin –tags</span><br><span class="line"></span><br><span class="line">创建带注释的tag：$ git tag -a [name] -m ‘yourMessage’</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>写在前面</title>
      <link href="/20180904/%E5%86%99%E5%9C%A8%E5%89%8D%E9%9D%A2/"/>
      <url>/20180904/%E5%86%99%E5%9C%A8%E5%89%8D%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<p>一直想拥有一个自己的个人博客，终于，站在巨人的肩膀上，完成了个人博客的搭建，这里就不重复造轮子了，有兴趣的同学，参考<a href="https://zhuanlan.zhihu.com/p/34654952" target="_blank" rel="noopener">这里</a>。</p><p>本着一贯追求极致简约，主题用的是<a href="https://github.com/KevinOfNeu/hexo-theme-xoxo" target="_blank" rel="noopener">xoxo</a>，自己魔改了一下，感觉还可以。</p><p>希望在接下来的日子里，能够坚持写博客的习惯。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
